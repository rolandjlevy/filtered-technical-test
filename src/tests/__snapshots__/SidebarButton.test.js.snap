// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Component renders 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <SidebarButton />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": <li
        className="asset type-undefined"
        onClick={[Function]}
>
        <h2 />
        <p>
                <span
                        className="info"
                >
                         minutes
                </span>
                <span
                        className="info"
                />
        </p>
</li>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <h2 />,
          <p>
            <span
                        className="info"
            >
                         minutes
            </span>
            <span
                        className="info"
            />
</p>,
        ],
        "className": "asset type-undefined",
        "onClick": [Function],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": undefined,
          },
          "ref": null,
          "rendered": null,
          "type": "h2",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <span
                className="info"
>
                 minutes
</span>,
              <span
                className="info"
/>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  undefined,
                  " minutes",
                ],
                "className": "info",
              },
              "ref": null,
              "rendered": Array [
                undefined,
                " minutes",
              ],
              "type": "span",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": undefined,
                "className": "info",
              },
              "ref": null,
              "rendered": null,
              "type": "span",
            },
          ],
          "type": "p",
        },
      ],
      "type": "li",
    },
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": <li
          className="asset type-undefined"
          onClick={[Function]}
>
          <h2 />
          <p>
                    <span
                              className="info"
                    >
                               minutes
                    </span>
                    <span
                              className="info"
                    />
          </p>
</li>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <h2 />,
            <p>
              <span
                            className="info"
              >
                             minutes
              </span>
              <span
                            className="info"
              />
</p>,
          ],
          "className": "asset type-undefined",
          "onClick": [Function],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": undefined,
            },
            "ref": null,
            "rendered": null,
            "type": "h2",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <span
                  className="info"
>
                   minutes
</span>,
                <span
                  className="info"
/>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    undefined,
                    " minutes",
                  ],
                  "className": "info",
                },
                "ref": null,
                "rendered": Array [
                  undefined,
                  " minutes",
                ],
                "type": "span",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": undefined,
                  "className": "info",
                },
                "ref": null,
                "rendered": null,
                "type": "span",
              },
            ],
            "type": "p",
          },
        ],
        "type": "li",
      },
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
